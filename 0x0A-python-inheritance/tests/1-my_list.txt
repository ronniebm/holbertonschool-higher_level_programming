---------------------------------
User:   Ronnie Barrios
Email:  ronnie.coding@gmail.com
---------------------------------
Using ``my_list``

a class MyList that inherits from list:
***********************************************************************

First import ``my_list``

    >>> MyList = __import__('1-my_list').MyList

***********************************************************************

Test cases:

     # normal behavior.
     ------------------
     >>> my_list = MyList()
	 >>> my_list.print_sorted()
	 []


     # case0: Appending an 'int'.
     ----------------------------
     >>> my_list.append(4)


     # case1: Appending an 2nd 'int'.
     ----------------------------
     >>> my_list.append(1)


     # case2: print sorted method.
     ----------------------------
     >>> my_list.print_sorted()
     [1, 4]


	 # case3: list already sorted.
	 ----------------------------
	 >>> my_list.extend([2, 3, 6, 7])
	 >>> my_list.sort()


	 # case4: extra args.
	 ----------------------------
	 >>> my_list.print_sorted([2, 3])
	 Traceback (most recent call last):
	 ...
	 TypeError: print_sorted() takes 1 positional argument but 2 were given


	 # case5: negative numbers.
	 ----------------------------
	 >>> my_list.extend([-2, -23, -15, -8])
	 >>> my_list.print_sorted()
	 [-23, -15, -8, -2]


	 # case6: testing module docstring.
	 ---------------------------------
	 >>> m_doc = __import__('1-my_list').__doc__
	 >>> len(m_doc) > 1
	 True


	 # case7: testing class docstring.
	 --------------------------------
	 >>> c_doc = __import__('1-my_list').MyList.__doc__
	 >>> len(c_doc) > 1
	 True


	 # case8: testing method docstring.
	 ---------------------------------
	 >>> m_doc = __import__('1-my_list').MyList.print_sorted.__doc__
	 >>> len(m_doc) > 1
	 True
